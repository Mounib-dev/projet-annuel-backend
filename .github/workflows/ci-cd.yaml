name: Backend CI/CD

on:
  push:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  tests_and_lint:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    name: Tests and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - name: Lint
        run: npm run lint

      - name: Tests
        run: npm run test -- --ci

  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    name: Build
    runs-on: ubuntu-latest
    needs: tests_and_lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - name: Build
        run: npm run build

deploy:
  if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
  name: Deploy to Heroku
  runs-on: ubuntu-latest
  needs: build
  env:
    HEROKU_APP_NAME_API: ${{ secrets.HEROKU_APP_NAME_API }}
  steps:
    - uses: actions/checkout@v4

    - name: Install Heroku CLI
      run: curl https://cli-assets.heroku.com/install.sh | sh

    - name: Login & set remote
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku auth:token >/dev/null 2>&1 || true
        heroku git:remote -a "$HEROKU_APP_NAME_API"

    - name: Push to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        GIT_AUTHOR_NAME: "GitHub Actions"
        GIT_AUTHOR_EMAIL: ${{ secrets.HEROKU_EMAIL }}
        GIT_COMMITTER_NAME: "GitHub Actions"
        GIT_COMMITTER_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      run: |
        git config user.name "$GIT_AUTHOR_NAME"
        git config user.email "$GIT_AUTHOR_EMAIL"
        git push heroku HEAD:main -f
